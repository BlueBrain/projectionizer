#!/usr/bin/env python
"""
You can run this example like this:
    .. code:: console
            $ luigi --module examples.hello_world examples.HelloWorldTask --local-scheduler
If that does not work, see :ref:`CommandLine`.
"""
import logging
import os
import sys
from os.path import dirname, join, realpath
from shutil import copyfile

import luigi

from apps.parser import common_parser, luigi_params

L = logging.getLogger(__name__)


if __name__ == '__main__':
    logging.basicConfig(level=logging.DEBUG)
    parser = common_parser()
    args = parser.parse_args()

    config = join(args.output, 'config.yaml')

    if not os.path.exists(config):
        if not args.config:
            L.error('The --config is required if {} does not exists\n'
                    'Example config files can be found in the "templates" directory'.format(config))
            sys.exit(-1)
        L.debug('Copying the config in the output directory: {}'.format(args.output))
        try:
            os.makedirs(args.output)
        except:
            pass
        copyfile(args.config if args.config else join(dirname(realpath(__file__)), 'config.yaml'),
                 config)
    elif args.config:
        L.warning('Custom config: {} won\'t be used as {} already have a config file'.format(
            args.config, args.output))

    cmd = ['DoAll', '--folder', args.output, '--module',
           'projectionizer.step_3_write', '--workers', '1',
           ]

    cmd += luigi_params(config, args)
    L.debug('Calling luigi.run() with the following params: {}'.format(' '.join(cmd)))
    sys.exit(luigi.run(cmd) == 1)
