[base]
name = projectionizer
testdeps =
    mock
    pytest

[tox]
envlist =
    check-version
    lint
    py37

indexserver =
    default = https://bbpteam.epfl.ch/repository/devpi/simple

[testenv]
deps = {[base]testdeps}
commands = pytest {[base]name}/tests

[testenv:check-version]
skip_install = true
deps = bbp-nse-ci
commands = do_release.py -p . check-version

[testenv:lint]
basepython=python3.7
deps =
    black
    isort
    pycodestyle
    pylint
commands =
    black --check .
    isort --check --diff {[base]name} doc/source/conf.py setup.py apps/projectionizer --skip {[base]name}/tests
    pycodestyle --exclude {[base]name}/tests -- apps {[base]name}
    pylint {[base]name}

[testenv:coverage]
basepython=python3.7
deps =
    {[base]testdeps}
    coverage
commands =
    coverage run --source {[base]name} -m pytest {[base]name}/tests
    coverage report --show-missing
    coverage xml

[testenv:format]
basepython=python3.7
deps =
    black
    isort
commands =
    black .
    isort {[base]name} doc/source/conf.py setup.py apps/projectionizer --skip {[base]name}/tests

[testenv:docs]
basepython=python3.7
changedir = doc
deps = sphinx
commands = make html
whitelist_externals = make

# E731: do not assign a lambda expression, use a def
# W503 line break before binary operator - black uses this
# E402 module level import not at top of file - deal with matplotlib agg backend
# E203 whitespace before ':' - black uses slices like "[1 : 5]"
[pycodestyle]
ignore = E731,W503,E402,E203
max-line-length = 100

# 'projectionizer' needs to be hard-coded here (tox variable not working)
[pytest]
filterwarnings =
    ignore
    error:::projectionizer

[isort]
profile = black
